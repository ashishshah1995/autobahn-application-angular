{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../../services/autobahn.service\";\nimport * as i3 from \"../../services/favorites.service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"../../components/roadwork-card/roadwork-card.component\";\n\nfunction HighwayPageComponent_section_2_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction HighwayPageComponent_section_2_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 9)(1, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function HighwayPageComponent_section_2_ng_template_4_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r11 = i0.ɵɵnextContext(2);\n      return ctx_r11.addToFavorites();\n    });\n    i0.ɵɵtext(2, \"Add to favorites\");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nfunction HighwayPageComponent_section_2_ng_template_6_button_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r15 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 19);\n    i0.ɵɵlistener(\"click\", function HighwayPageComponent_section_2_ng_template_6_button_3_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r14 = i0.ɵɵnextContext(3);\n      return ctx_r14.removeFromFavorites();\n    });\n    i0.ɵɵtext(1, \"Remove from favorites\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction HighwayPageComponent_section_2_ng_template_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r17 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 9)(1, \"button\", 11);\n    i0.ɵɵlistener(\"click\", function HighwayPageComponent_section_2_ng_template_6_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r17);\n      const ctx_r16 = i0.ɵɵnextContext(2);\n      return ctx_r16.saveFavoriteChanges();\n    });\n    i0.ɵɵtext(2, \"Save changes\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, HighwayPageComponent_section_2_ng_template_6_button_3_Template, 2, 0, \"button\", 12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"form\", 13)(5, \"div\", 14)(6, \"label\", 15);\n    i0.ɵɵtext(7, \"Comment\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"div\", 16);\n    i0.ɵɵelement(9, \"textarea\", 17);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(10, \"div\", 14)(11, \"label\", 15);\n    i0.ɵɵtext(12, \"Color code\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"div\", 16);\n    i0.ɵɵelement(14, \"input\", 18);\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const ctx_r10 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"disabled\", ctx_r10.favoriteDetailsForm.pristine || ctx_r10.favoriteDetailsForm.invalid);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r10.firstFavoriteInsertion);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formGroup\", ctx_r10.favoriteDetailsForm);\n  }\n}\n\nfunction HighwayPageComponent_section_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"section\")(1, \"h2\", 5);\n    i0.ɵɵtext(2, \"Favorite\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, HighwayPageComponent_section_2_ng_container_3_Template, 1, 0, \"ng-container\", 6);\n    i0.ɵɵtemplate(4, HighwayPageComponent_section_2_ng_template_4_Template, 3, 0, \"ng-template\", null, 7, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtemplate(6, HighwayPageComponent_section_2_ng_template_6_Template, 15, 3, \"ng-template\", null, 8, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const _r7 = i0.ɵɵreference(5);\n\n    const _r9 = i0.ɵɵreference(7);\n\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.favoriteDetails !== null)(\"ngIfThen\", _r9)(\"ngIfElse\", _r7);\n  }\n}\n\nfunction HighwayPageComponent_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1, \"Data is loading\\n\");\n    i0.ɵɵelementContainerEnd();\n  }\n}\n\nfunction HighwayPageComponent_ng_template_4_section_0_app_roadwork_card_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-roadwork-card\", 22);\n  }\n\n  if (rf & 2) {\n    const roadwork_r20 = ctx.$implicit;\n    i0.ɵɵproperty(\"roadwork\", roadwork_r20);\n  }\n}\n\nfunction HighwayPageComponent_ng_template_4_section_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"section\")(1, \"h2\", 5);\n    i0.ɵɵtext(2, \"Roadworks\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 20);\n    i0.ɵɵtemplate(4, HighwayPageComponent_ng_template_4_section_0_app_roadwork_card_4_Template, 1, 1, \"app-roadwork-card\", 21);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r18 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r18.roadworks);\n  }\n}\n\nfunction HighwayPageComponent_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, HighwayPageComponent_ng_template_4_section_0_Template, 5, 1, \"section\", 2);\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n\n    const _r4 = i0.ɵɵreference(7);\n\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.roadworks && ctx_r3.roadworks.length > 0)(\"ngIfElse\", _r4);\n  }\n}\n\nfunction HighwayPageComponent_ng_template_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \" No Data available \");\n  }\n}\n\nexport let HighwayPageComponent = /*#__PURE__*/(() => {\n  class HighwayPageComponent {\n    constructor(route, autobahnService, favoritesService) {\n      this.route = route;\n      this.autobahnService = autobahnService;\n      this.favoritesService = favoritesService;\n      this.firstFavoriteInsertion = false;\n      this.isLoaded = true;\n      this.favoriteDetailsForm = new FormGroup({\n        comment: new FormControl('', [Validators.required]),\n        colorCode: new FormControl('', [Validators.required])\n      });\n    }\n\n    ngOnInit() {\n      this.route.params.subscribe(params => {\n        // Get the highway's ID from the URL.\n        this.highwayId = params['highwayId'];\n        this.isLoaded = true; // Since we've updated the highway ID, we need to update the data to reflect the correct highway.\n\n        this.update();\n      });\n    }\n\n    addToFavorites() {\n      if (this.highwayId !== undefined) {\n        // Update the change in the UI.\n        // It will not be saved right now, as the user needs to provide a comment and color code.\n        this.favoriteDetails = {\n          highwayId: this.highwayId,\n          comment: '',\n          colorCode: ''\n        }; // Mark this as the first favorite insertion, because the highway has not yet been committed to storage.\n\n        this.firstFavoriteInsertion = true;\n      }\n    }\n\n    removeFromFavorites() {\n      if (this.highwayId !== undefined) {\n        // Optimistically update the change in the UI.\n        this.favoriteDetails = null; // Commit the change.\n\n        this.favoritesService.removeFavoriteDetails(this.highwayId);\n      }\n    }\n\n    saveFavoriteChanges() {\n      // If the form is in an invalid state, do not allow the user to proceed.\n      if (this.favoriteDetailsForm.invalid) return; // Use the data in the form to update the saved details.\n      // This is also used to insert the details for the first time.\n\n      this.favoritesService.insertFavoriteDetails(Object.assign({\n        highwayId: this.highwayId\n      }, this.favoriteDetailsForm.value)); // The highway has been inserted, so this is no longer the first favorite insertion.\n\n      this.firstFavoriteInsertion = false; // Clear the form's trackers because it now reflects the state as saved.\n\n      this.favoriteDetailsForm.markAsPristine();\n      this.favoriteDetailsForm.markAsUntouched();\n    }\n\n    update() {\n      if (this.highwayId !== undefined) {\n        // Get the roadworks for this highway.\n        this.autobahnService.getHighwayRoadworks(this.highwayId).subscribe(hrr => {\n          this.isLoaded = false;\n          this.roadworks = hrr.roadworks;\n        }); // Get the favorite details for this highway.\n\n        this.favoriteDetails = this.favoritesService.getFavoriteDetails(this.highwayId);\n\n        if (this.favoriteDetails !== null) {\n          // We reset the form to the stored details.\n          // This automatically clears the trackers, which we need because it reflects the state as saved.\n          this.favoriteDetailsForm.reset(this.favoriteDetails);\n        }\n      }\n    }\n\n  }\n\n  HighwayPageComponent.ɵfac = function HighwayPageComponent_Factory(t) {\n    return new (t || HighwayPageComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.AutobahnService), i0.ɵɵdirectiveInject(i3.FavoritesService));\n  };\n\n  HighwayPageComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: HighwayPageComponent,\n    selectors: [[\"app-highway-page\"]],\n    decls: 8,\n    vars: 4,\n    consts: [[1, \"is-size-1\"], [4, \"ngIf\"], [4, \"ngIf\", \"ngIfElse\"], [\"available\", \"\"], [\"noData\", \"\"], [1, \"is-size-2\"], [4, \"ngIf\", \"ngIfThen\", \"ngIfElse\"], [\"notFavorited\", \"\"], [\"favorited\", \"\"], [1, \"buttons\"], [1, \"button\", \"is-primary\", 3, \"click\"], [1, \"button\", \"is-primary\", 3, \"disabled\", \"click\"], [\"class\", \"button is-danger\", 3, \"click\", 4, \"ngIf\"], [3, \"formGroup\"], [1, \"field\"], [1, \"label\"], [1, \"control\"], [\"formControlName\", \"comment\", 1, \"textarea\"], [\"type\", \"text\", \"formControlName\", \"colorCode\", 1, \"input\"], [1, \"button\", \"is-danger\", 3, \"click\"], [1, \"columns\", \"is-multiline\"], [\"class\", \"column is-half\", 3, \"roadwork\", 4, \"ngFor\", \"ngForOf\"], [1, \"column\", \"is-half\", 3, \"roadwork\"]],\n    template: function HighwayPageComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h1\", 0);\n        i0.ɵɵtext(1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(2, HighwayPageComponent_section_2_Template, 8, 3, \"section\", 1);\n        i0.ɵɵtemplate(3, HighwayPageComponent_ng_container_3_Template, 2, 0, \"ng-container\", 2);\n        i0.ɵɵtemplate(4, HighwayPageComponent_ng_template_4_Template, 1, 2, \"ng-template\", null, 3, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵtemplate(6, HighwayPageComponent_ng_template_6_Template, 1, 0, \"ng-template\", null, 4, i0.ɵɵtemplateRefExtractor);\n      }\n\n      if (rf & 2) {\n        const _r2 = i0.ɵɵreference(5);\n\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate(ctx.highwayId);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.favoriteDetails !== undefined);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.isLoaded)(\"ngIfElse\", _r2);\n      }\n    },\n    directives: [i4.NgIf, i5.ɵNgNoValidate, i5.NgControlStatusGroup, i5.FormGroupDirective, i5.DefaultValueAccessor, i5.NgControlStatus, i5.FormControlName, i4.NgForOf, i6.RoadworkCardComponent],\n    styles: [\"\"]\n  });\n  return HighwayPageComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}